package com.sdg.display{	import com.sdg.core.IProgressInfo;	import com.sdg.core.NullProgressInfo;	import com.sdg.display.render.RenderObject;	import com.sdg.events.RoomItemDisplayEvent;	import com.sdg.model.SdgItem;		import flash.display.DisplayObject;	import flash.display.InteractiveObject;	import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.geom.Rectangle;	public class EmbeddedRoomItemDisplay extends Sprite implements IRoomItemDisplay	{		private var _content:DisplayObject;		private var _item:SdgItem;		private var _label:String;		private var _progressInfo:IProgressInfo = new NullProgressInfo();		protected var _itemResolveStatus:uint;				public function get content():DisplayObject		{			return _content;		}				public function set content(value:DisplayObject):void		{			if (_content)			{				_content.removeEventListener(MouseEvent.CLICK, dispatchEvent);				_content.removeEventListener(MouseEvent.MOUSE_OUT, dispatchEvent);				_content.removeEventListener(MouseEvent.MOUSE_OVER, dispatchEvent);				_content.removeEventListener(MouseEvent.MOUSE_DOWN, dispatchEvent);				_content.removeEventListener(MouseEvent.MOUSE_UP, dispatchEvent);			}						_content = value;						if (_content)			{				_content.addEventListener(MouseEvent.CLICK, dispatchEvent);				_content.addEventListener(MouseEvent.MOUSE_OUT, dispatchEvent);				_content.addEventListener(MouseEvent.MOUSE_OVER, dispatchEvent);				_content.addEventListener(MouseEvent.MOUSE_DOWN, dispatchEvent);				_content.addEventListener(MouseEvent.MOUSE_UP, dispatchEvent);								dispatchEvent(new RoomItemDisplayEvent(RoomItemDisplayEvent.CONTENT, this));			}		}				public function load():void		{			return;		}				public function get item():SdgItem		{			return _item;		}				public function get instanceName():String		{			return (_item) ? "item_" + _item.id : "";		}				public function get label():String		{			return _label;		}				public function set label(value:String):void		{			_label = value;		}				override public function get mouseEnabled():Boolean		{			return (_content is InteractiveObject) ? InteractiveObject(_content).mouseEnabled : false;		}				override public function set mouseEnabled(value:Boolean):void		{			if (_content is InteractiveObject) InteractiveObject(_content).mouseEnabled = value;		}				public function get progressInfo():IProgressInfo		{			return _progressInfo;		}				public function get renderItem():RenderObject		{			return null;		}				override public function get x():Number		{			return (_content) ? _content.x : NaN;		}				override public function set x(value:Number):void		{			// Do nothing.		}				override public function get y():Number		{			return (_content) ? _content.y : NaN;		}				override public function set y(value:Number):void		{			// Do nothing.		}				public function get orientation():uint		{			return 0;		}				public function set orientation(value:uint):void		{			// Do nothing.		}				override public function get visible():Boolean		{			return (_content) ? _content.visible : false;		}				override public function set visible(value:Boolean):void		{			if (_content) _content.visible = value;		}				public function set floorMarker(value:DisplayObject):void		{					}				public function get itemResolveStatus():uint		{			return _itemResolveStatus;		}		public function set itemResolveStatus(value:uint):void		{			_itemResolveStatus = value;		}				public function EmbeddedRoomItemDisplay(item:SdgItem, content:DisplayObject = null)		{			_item = item;			this.content = content;		}				public function activate():void		{		}				public function deactivate():void		{		}				public function destroy():void		{		}				public function getImageRect(update:Boolean = false):Rectangle		{			return (_content) ? _content.getRect(_content) : new Rectangle();		}				public function playAnimation(name:String):void		{			// Do nothing.		}				public function showUIState(state:int):void		{			// Do nothing.		}		    }}