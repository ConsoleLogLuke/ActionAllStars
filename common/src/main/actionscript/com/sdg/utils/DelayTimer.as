package com.sdg.utils{	import com.sdg.core.IntervalType;	import com.sdg.events.IntervalEvent;	import flash.events.EventDispatcher;	import flash.utils.clearInterval;	import flash.utils.setInterval;	import flash.utils.getTimer;	[Event(name="interval", type="com.sdg.events.IntervalEvent")]	public class DelayTimer extends EventDispatcher implements ITimer	{		private var _delay:Number;		private var _intervalId:int = -1;		private var _currentIntervalTime:uint;				public function get currentIntervalTime():Number		{			return _currentIntervalTime;		}				public function get isRunning():Boolean		{			return _intervalId != -1;		}				public function get interval():Number		{			return _delay;		}				public function set interval(value:Number):void		{			_delay = (value <= .01) ? .01 : value;			updateInterval();		}				public function get intervalType():uint		{			return IntervalType.SET_INTERVAL;		}				public function DelayTimer(delay:Number = 10):void		{			interval = delay;		}			public function start():void		{			if (_intervalId == -1)			{				_currentIntervalTime = getTimer();				_intervalId = setInterval(onInterval, _delay);			}		}			public function stop():void		{			if (_intervalId != -1)			{				clearInterval(_intervalId);				_intervalId = -1;			}		}				private function onInterval():void		{			var current:int = getTimer();			dispatchEvent(new IntervalEvent('interval', current - _currentIntervalTime));			_currentIntervalTime = current;		}			private function updateInterval():void		{			if (_intervalId != -1)			{				clearInterval(_intervalId);				_intervalId = setInterval(onInterval, _delay);			}		}	}}