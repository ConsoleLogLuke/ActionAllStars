package com.sdg.utils{	import com.sdg.core.StageProxy;	import com.sdg.core.IntervalType;	import com.sdg.events.IntervalEvent;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.utils.getTimer;	[Event(name="interval", type="com.sdg.events.IntervalEvent")]	public class EnterFrameTimer extends EventDispatcher implements ITimer	{		private var _frameCount:int = -1;		private var _frameRate:Number;		private var _globalFrameRatio:Number;		private var _currentIntervalTime:uint;				public function get currentIntervalTime():Number		{			return _currentIntervalTime;		}				public function get isRunning():Boolean		{			return _frameCount != -1;		}				public function get interval():Number		{			return _frameRate;		}				public function set interval(value:Number):void		{			_frameRate = (value <= .01) ? .01 : value;			updateInterval();		}				public function get intervalType():uint		{			return IntervalType.ENTER_FRAME;		}				public function get frameCount():Number		{			return _currentIntervalTime;		}			public function EnterFrameTimer(frameRate:Number = NaN):void		{			interval = frameRate;		}			public function start():void		{			if (_frameCount == -1)			{				_frameCount = 0;				_currentIntervalTime = getTimer();				updateInterval();								StageProxy.getInstance().addEventListener(Event.ENTER_FRAME, onInterval, false, int.MAX_VALUE, true);				StageProxy.getInstance().addEventListener(StageProxy.ENTER_FRAME_CHANGE, updateInterval);			}		}			public function stop():void		{			if (_frameCount != -1)			{				_frameCount = -1;				StageProxy.getInstance().removeEventListener(Event.ENTER_FRAME, onInterval);				StageProxy.getInstance().removeEventListener(StageProxy.ENTER_FRAME_CHANGE, updateInterval);			}		}				private function onInterval(event:Event):void		{			_frameCount++;						if (_frameCount >= _globalFrameRatio)			{				var current:int = getTimer();								dispatchEvent(new IntervalEvent('interval', current - _currentIntervalTime));							_currentIntervalTime = current;				_frameCount = 0;			}		}				private function updateInterval(event:Event = null):void		{			if (_frameCount != -1)			{				if (isNaN(_frameRate))					_globalFrameRatio = 1;				else					_globalFrameRatio = Math.round(StageProxy.getInstance().frameRate / _frameRate);			}		}	}}