package com.sdg.geom{	public class V2	{		public var x:Number;		public var y:Number;				public function get angle():Number		{			return Math.atan2(y, x);		}				public function get magnitude():Number		{			return Math.sqrt(x * x + y * y);		}				public function V2(x:Number = 0, y:Number = 0)		{			this.x = x, this.y = y;		}				public function dot(v:V2):Number		{			return x * v.x + y * v.y;		}				public function cross(v:V2):Number		{			return x * v.y - y * v.x;		}				public function plus(v:V2):V2		{			return new V2(x + v.x, y + v.y);		}				public function plusEq(v:V2):void		{			x += v.x, y += v.y;		}				public function minus(v:V2):V2		{			return new V2(x - v.x, y - v.y);		}				public function minusEq(v:V2):void		{			x -= v.x, y -= v.y;		}				public function mult(v:V2):V2		{			return new V2(x * v.x, y * v.y);		}				public function multEq(v:V2):void		{			x *= v.x, y *= v.y;		}				public function div(v:V2):V2		{			return new V2(x / (v.x + 1e-15), y / (v.y + 1e-15));		}				public function divEq(v:V2):void		{			x /= v.x + 1e-15, y /= v.y + 1e-15;		}				public function normalize():void		{			var mI:Number = 1 / (Math.sqrt(x * x + y * y) + 1e-15);			x *= mI, y *= mI;		}				public function unit():V2		{			var mI:Number = 1 / (Math.sqrt(x * x + y * y) + 1e-15);			return new V2(x * mI, y * mI);		}				public function rotate(theta:Number):void		{			var cos:Number = Math.cos(theta);			var sin:Number = Math.sin(theta);			var rx:Number = cos * x - sin * y;						y = cos * y + sin * x;			x = rx;		}				public function scale(mag:Number):void		{			x *= mag, y *= mag;		}				public function distance(v:V2):Number		{			return Math.sqrt( (v.x - x) * (v.x - x) + (v.y - y) * (v.y - y) );		}				public function normal():V2		{			return new V2(-y, x);		}				public function projection(v:V2):V2		{			var dpDivMagSq:Number = (x * v.x + y * v.y) / (v.x * v.x + v.y * v.y + 1e-15);			return new V2(dpDivMagSq * v.x, dpDivMagSq * v.y);		}				public function clone():V2		{			return new V2(x, y);		}				public function toString():String		{			return "(x=" + x + ", y=" + y + ")";		}	}}