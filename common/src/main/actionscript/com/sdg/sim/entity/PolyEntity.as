package com.sdg.sim.entity{	import com.sdg.geom.AABB;	import com.sdg.sim.core.SimEntity;		public class PolyEntity extends SimEntity implements IBody	{		protected var _vertices:Array;				public function get vertices():Array		{			return _vertices;		}				public function PolyEntity(vertices:Array = null)		{			_vertices = vertices;			invalidate(RESIZED_FLAG);		}				override protected function validate():void		{			super.validate();						if (sdata.flags & (RESIZED_FLAG | ROTATED_FLAG))			{				updateLocalAABB();			}		}				protected function updateLocalAABB():void		{			aabb.xMin = aabb.yMin = Number.POSITIVE_INFINITY;			aabb.xMax = aabb.yMax = Number.NEGATIVE_INFINITY;						var i:int = _vertices.length;						while (i-- > 0)			{				var vtx:Number = sdata.r11 * _vertices[i].x - sdata.r21 * _vertices[i].y;				var vty:Number = sdata.r21 * _vertices[i].x + sdata.r11 * _vertices[i].y;								if (vtx < aabb.xMin) aabb.xMin = vtx;				if (vtx > aabb.xMax) aabb.xMax = vtx;				if (vty < aabb.yMin) aabb.yMin = vty;				if (vty > aabb.yMax) aabb.yMax = vty;			}		}	}}