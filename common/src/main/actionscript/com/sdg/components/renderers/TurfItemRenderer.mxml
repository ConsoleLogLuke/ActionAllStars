<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
	horizontalAlign="center" verticalAlign="middle"
	horizontalScrollPolicy="off" verticalScrollPolicy="off"
	buttonMode="true" mouseDown="data.viewUpdateDisabled = true"
	mouseUp="data.viewUpdateDisabled = false">
	
	<mx:Script>
		<![CDATA[
			[Bindable]
			protected var state:String;
			[Bindable]
			protected var selectedBorderThickness:int = 2;
			[Bindable]
			protected var defaultBorderThickness:int = 1;
			[Bindable]
			protected var backAlpha:Number;
			
			override public function get currentState():String
			{
				return state;
			}
			
			override public function set currentState(value:String):void
			{
				state = value;
			}
			
			protected function drawCircle():void
			{
				redCircle.graphics.lineStyle(1, 0xffffff);
				redCircle.graphics.beginFill(0x80002A);
				redCircle.graphics.drawCircle(9, 9, 9);
			}
		]]>
	</mx:Script>
	<mx:Canvas >
		<mx:Canvas id="itemThumb" width="{getStyle('itemWidth') + 1 + (2 * selectedBorderThickness)}"
			height="{getStyle('itemHeight') + 1 + (2 * selectedBorderThickness)}" y="5">
			<mx:Canvas id="tileBackground" horizontalScrollPolicy="off" verticalScrollPolicy="off"
				backgroundColor="0xFFFFFF" backgroundAlpha="{backAlpha}"
				borderColor="{state == 'selected' ? getStyle('selectionColor') :
							state == 'highlighted' ? getStyle('rollOverColor') : getStyle('disabledColor')}"
				borderThickness="{state == 'selected' ? selectedBorderThickness : defaultBorderThickness}"
				borderStyle="solid" dropShadowEnabled="true"
				width="{thumbnail.width + (2 * tileBackground.getStyle('borderThickness'))}"
				height="{thumbnail.height + (2 * tileBackground.getStyle('borderThickness'))}"
				horizontalCenter="0" verticalCenter="0">
				<mx:Image id="thumbnail" source="{data.thumbnailUrl}" horizontalAlign="center" verticalAlign="middle"
					horizontalCenter="0" verticalCenter="0"
					width="{state == 'selected' ? getStyle('itemWidth') + 1: getStyle('itemWidth')}"
					height="{state == 'selected' ? getStyle('itemHeight') + 1: getStyle('itemHeight')}"/>
			</mx:Canvas>
			<mx:Canvas width="100%" height="100%" backgroundColor="#333333" backgroundAlpha=".5"
				visible="{data.inventoryCountDisplay == 0}">
				<mx:Canvas width="62" height="15" backgroundColor="#000000" rotation="-42" x="3" y="50">
					<mx:Label text="In Use" fontSize="9" fontFamily="EuroStyle" fontWeight="normal" horizontalCenter="0" verticalCenter="0"/>
				</mx:Canvas>
			</mx:Canvas>
			<mx:Canvas width="100%" height="100%" backgroundColor="#333333" backgroundAlpha=".5"
				visible="{data.isGreyedOut}">
				<mx:Canvas width="62" height="15" backgroundColor="#8d0200" rotation="-42" x="3" y="50">
					<mx:Label text="MVP Only" fontSize="9" fontFamily="EuroStyle" fontWeight="normal" horizontalCenter="0" verticalCenter="0"/>
				</mx:Canvas>
			</mx:Canvas>
		</mx:Canvas>
		
		<mx:Canvas visible="{data.inventoryCountDisplay != 0}" width="18" height="18" x="{itemThumb.width - 13}">
			<mx:UIComponent id="redCircle" creationComplete="drawCircle()"/>
			<mx:Label text="{data.inventoryCountDisplay}" fontFamily="EuroStyle" fontSize="9" horizontalCenter="-1" verticalCenter="1"/>
		</mx:Canvas>
		
		<!--<mx:Canvas x="{itemThumb.width - 13}" backgroundColor="#191919" width="18" height="15" mouseChildren="false">
			<mx:Label text="{data.inventoryCountDisplay}" horizontalCenter="0" verticalCenter="0" height="15"
				fontSize="9" fontFamily="EuroStyle" fontWeight="bold" color="{state == 'selected' ? 0xffffff : 0x4a4a4a}"/>
		</mx:Canvas>-->
	</mx:Canvas>
</mx:VBox>
