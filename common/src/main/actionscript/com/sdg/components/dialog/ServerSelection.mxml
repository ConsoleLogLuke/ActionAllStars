<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas
	xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:sdgcontrols="com.sdg.components.controls.*"
	horizontalScrollPolicy="off" width="810" height="451"
	verticalScrollPolicy="off" implements="com.sdg.components.dialog.ISdgDialog">

	<mx:Script>
		<![CDATA[
			import com.sdg.components.renderers.ServerRendererChrome;
			import com.sdg.utils.MainUtil;
			import com.sdg.model.Server;
			import com.sdg.model.Avatar;
			import mx.managers.PopUpManager;
			import com.sdg.model.ModelLocator;
			import com.sdg.model.Server;
			import com.sdg.components.controls.SdgAlert;
			import com.sdg.events.ServerListEvent;
			import com.sdg.events.SocketLoginEvent;
			import mx.collections.ArrayCollection;
			import mx.events.CollectionEvent;
			import mx.events.CollectionEventKind;
			import mx.events.PropertyChangeEvent;
			import mx.binding.utils.ChangeWatcher;
			import mx.core.FlexGlobals; // Non-SDG - Application to FlexGlobals
			import com.sdg.components.renderers.ServerRenderer;
			import com.adobe.cairngorm.control.CairngormEventDispatcher;

			[Bindable]
            private var _servers:ArrayCollection;

            private var _selectedServer:Server;
            private var _disableSelect:Boolean = false;
            private var _forceFailOver:Boolean = false;

			public function init(params:Object):void
			{
				this._forceFailOver = params.forceFailOver;
				trace("ServerSelection: forceFailOver = " + _forceFailOver);

				this.setFocus();

				var av:Avatar = ModelLocator.getInstance().avatar;
				CairngormEventDispatcher.getInstance().addEventListener(ServerListEvent.LIST_COMPLETED, onListCompleted);
				dispatchEvent(new ServerListEvent());
			}

			private function onListCompleted(event:ServerListEvent):void
			{
				// filter out the Safe Chat if the avatar is in ultra safe chat mode
				if (ModelLocator.getInstance().avatar.chatModeStatus == Avatar.ULTRA_SAFE_CHAT)
				{
					_servers = new ArrayCollection();
					// filter out Safe Chat
					for each (var server:Server in ModelLocator.getInstance().servers)
					{
						if (server.chatMode == Server.ULTRA_SAFE_CHAT)
						{
							_servers.addItem(server);
						}
					}
				}
				else
				{
					_servers = ModelLocator.getInstance().servers;
				}

				if (_servers.length <= 8)
				{
					servers.width = 720;
					servers.verticalScrollPolicy = "off";
				}

				if (event.isAfterHours)
					afterHourImage.source = "swfs/SafeChat.swf";

				CairngormEventDispatcher.getInstance().removeEventListener(ServerListEvent.LIST_COMPLETED, onListCompleted);
			}

			private function selectServer():void
			{
				if (!_disableSelect && servers.selectedItem)
				{
					_selectedServer = Server(servers.selectedItem);
					if (_selectedServer.numUsers < ServerRendererChrome.MAX_NUM_USERS)
					{
						_disableSelect = true;
						Server.setCurrentServer(_selectedServer);
						FlexGlobals.topLevelApplication.socketLogin();
						close();
						//MainUtil.navigateToMain(_selectedServer, null, _forceFailOver);
					}
					else
						servers.selectedItem = null;
				}
			}
			public function close():void
			{
				PopUpManager.removePopUp(this);
			}
		]]>

	</mx:Script>
	<mx:Style>

	</mx:Style>

	<mx:Image source="swfs/registration/serverSelectBG.swf"/>
	<sdgcontrols:ItemTileList itemRenderer="com.sdg.components.renderers.ServerRendererChrome"
		horizontalCenter="0" verticalCenter="-4" verticalScrollPolicy="on"
		columnWidth="360" rowHeight="78" id="servers" click="selectServer()"
		dataProvider="{_servers}" dragEnabled="false"
		columnCount="2" rowCount="4" borderStyle="none" backgroundAlpha="0"/>
	<mx:Image id="afterHourImage" bottom="62" right="10"/>
</mx:Canvas>
