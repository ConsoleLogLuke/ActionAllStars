package com.sdg.collections.iterators{	import com.sdg.collections.Array2;	import com.sdg.collections.IIterator;	import flash.errors.IllegalOperationError;		public class Array2Iterator implements IIterator	{			private var _array2:Array2;		private var _index:int = -1;				/**		 * Returns the current index.		 */		public function get location():Object		{			return _index;		}				public function Array2Iterator(array2:Array2)		{			_array2 = array2;		}			/**		 * Resets the iteration _index;		 */		public function reset():void		{			_index = -1;		}			/**		 * Returns whether there remains an item to iterate over.		 */		public function hasNext():Boolean		{			return (_index + 1) < _array2.size;		}		/**		 * Returns the next item.		 */		public function next():*		{			if (++_index >= _array2.size) throw new IllegalOperationError("The next location is out of bounds.");						return _array2.getByIndex(_index);		}			/**		 * Removes and returns the current item.		 */		public function remove():*		{			if (_index < 0 || _index >= _array2.size) throw new IllegalOperationError("The current location is out of bounds.");						var item:* = _array2.getByIndex(_index);			_array2.setByIndex(_index, null);			return item;		}				/**		 * Removes and returns the next item.		 */		public function removeNext():*		{			if (++_index >= _array2.size) throw new IllegalOperationError("The next location is out of bounds.");						var item:* = _array2.getByIndex(_index);			_array2.setByIndex(_index, null);			return item;		}	}}