package com.sdg.collections{	import flash.utils.Dictionary;		public dynamic class QuickMap extends Dictionary	{		public function QuickMap(weakKeys:Boolean = false)		{			super(weakKeys);		}				public function get(key:*):*		{			return this[key];		}				public function getKey(value:*):*		{			var key:Object;						for (key in this)				if (this[key] == value) return key;		}				public function set(key:*, value:*):void		{			this[key] = value;		}				public function contains(value:*):Boolean		{			var key:Object;						for (key in this)				if (this[key] == value) return true;						return false;		}				public function containsKey(key:*):Boolean		{			return this[key] != null;		}				public function filter(callback:Function, thisObject:* = null):Array		{			var list:Array = [];			var item:*;						for (var key:Object in this)			{				item = this[key];								if ( callback.apply(thisObject, [item, key, this]) )				{					list.push(item);				}			}						return list;		}				public function filterByProperty(name:String, value:*):Array		{			var list:Array = [];						for each (var item:* in this)			{				try				{					if (item[name] == value) list.push(item);				}				catch (e:Error) {}			}						return list;		}				public function remove(key:*):*		{			var value:* = this[key];			delete this[key];			return value;		}				public function removeValue(value:*):*		{			var key:Object;						for (key in this)			{				if (this[key] == value)				{					delete this[key];					return key;				}			}						return null;		}				public function toArray():Array		{			var a:Array = [];			var o:Object;						for each (o in this) a.push(o);						return a;		}	}}